/*
Das Programm liest einzelne Zeichen ein und reserviert nach jeden Zeichen neuen Speicher fuer ein weiteres Zeichen.
Dies passiert solange bis das letzte eingegebene Zeichen Enter war.

Die eingelesenen Zeichenketten werden danach wieder ausgegeben und der Speicher wieder frei gemacht

Jan Taschbach, 11075552
Sven Fuchs, 11129798

*/

//Anzahl der einzulesenden Zeichenketten
#define AnzahlZK 3  //optional ausklammern



#include <stdio.h>
#include <stdlib.h>

//funktion zum einlesen der Zeichenketten und erweitern des speichers
char* zeichenketteEinlesen(void){
int ZeichenNo=1;          //zählvariable
char * ZeichenKette='NULL';    //pointer auf die Zeichenkette

ZeichenKette=(char *)calloc(ZeichenNo+2,sizeof(char));  //reserviere Speicher für 1 Zeichen und eins für das String
//                                                Ende Zeichen und eins für den möglichweweise bei windows nötigen cr
//                                                          und initialisiere direkt mit 0

//pruefe ob Speicher erfolgreich reserviert wurde
if(ZeichenKette=='NULL'){
//eingabeaufforderung
printf("Der Speicher konnte nicht reserviert werden.\n");
printf("Bitte bestaetigen sie mit der EnterTaste\n");
//lese enter Zeichen in irgendeinen zur verfügung stehenden speicher
scanf("%c",&ZeichenNo);
//kehre zurück zu dem punkt von wo die funktion aufgerufen wurde, in diesem Fall -> main() direkt hinter den Aufruf der Funktion
return;
}

//Lese Solange ein bis das letzte eingegebene Zeichen Enter war war
do{
//erweitere Speicher
ZeichenKette=realloc(ZeichenKette,(ZeichenNo)*sizeof(char));


//pruefe ob Speicher erfolgreich reserviert wurde
if(ZeichenKette=='NULL'){
//eingabeaufforderung
printf("Der Speicher konnte nicht reserviert werden.\n");
printf("Bitte bestaetigen sie mit der EnterTaste\n");
//lese enter Zeichen in irgendeinen zur verfügung stehenden speicher
scanf("%c",&ZeichenNo);
//kehre zurück zu dem punkt von wo die funktion aufgerufen wurde, in diesem Fall -> main() direkt hinter den Aufruf der Funktion
return;
}

//lese Zeichen ein
ZeichenKette[ZeichenNo-1]= getchar();
//Zaehle ein Zeichen hoch
ZeichenNo++;

//pruefe ob das letzte eingegebene Zeichen Enter war
}while(ZeichenKette[ZeichenNo-2]!='\n'&&ZeichenKette[ZeichenNo-2]!='\r');

//gebe die Adresse der Zeichenkette zurück
return ZeichenKette;
}



int main()
{
int AnzahlZk = -1;
AnzahlZk= AnzahlZK; //ANzahl der Zeichenketten
char temp='0'; //temporäre variable zum einlesen der enter taste
char Eingabe='0';//variable zum einlesen der Eingabe

//eingabeaufforderung
printf("Die aktuelle Anzahl Zeichenketten ist %i moechten sie aendern?\n\nDrücken sie Enter fuer weiter und e zum aendern.\n",AnzahlZk);
Eingabe=getchar();
if(Eingabe=='e'){
//einlesen von enter in temp
temp=getchar();
}

//int AnzahlZK =2;
if (Eingabe=='e'){
do{
printf("Bitte geben sie die neue Anzahl ein und bestaetigen sie ihre Eingabe mit der Entertaste.\n:");
scanf("%i",&AnzahlZk);
//einlesen von enter in temp
temp=getchar();
//bei ungueltiger eingabe
if(AnzahlZk<0)printf("\n\nungueltige Eingabe\n\nGeben sie eine Zahl groeßer 0 ein\n\nMit 0 wird koennen sie das Programm beenden\n\n");
}while(AnzahlZk<0);
}

char * ZeichenKetten[AnzahlZk];    //pointer für die ZeichenKetten
int KetteNo=0;              //Zählvariable

//lese Zeichenketten ein
for(KetteNo=0;KetteNo<sizeof(ZeichenKetten)/7;KetteNo++){
//Eingabeaufforderung
printf("Bitte geben sie die %i. Zeichenkette ein\n",KetteNo);
printf("und bestaetigen sie ihre Eingabe mit der Enter Taste.\n\n");
//rufe funktion zum einlesen auf
ZeichenKetten[KetteNo]=zeichenketteEinlesen();
}

//gebe Zeichenketten aus
for(KetteNo=0;KetteNo<sizeof(ZeichenKetten)/7;KetteNo++){
printf("Kette No.%i = %s\n",KetteNo,ZeichenKetten[KetteNo]);
}

//gebe Speicher wieder frei
for(KetteNo=0;KetteNo<sizeof(ZeichenKetten)/7;KetteNo++){
free(ZeichenKetten[KetteNo]);
}
    return 0;
}
